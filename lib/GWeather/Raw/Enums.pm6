use v6.c;

use GLib::Raw::Definitions;

unit package GWeather::Raw::Enums;

constant GWeatherConditionPhenomenon is export := gint32;
our enum GWeatherConditionPhenomenonEnum is export (
   GWEATHER_PHENOMENON_INVALID                  => -1,
  'GWEATHER_PHENOMENON_NONE',
  'GWEATHER_PHENOMENON_DRIZZLE',
  'GWEATHER_PHENOMENON_RAIN',
  'GWEATHER_PHENOMENON_SNOW',
  'GWEATHER_PHENOMENON_SNOW_GRAINS',
  'GWEATHER_PHENOMENON_ICE_CRYSTALS',
  'GWEATHER_PHENOMENON_ICE_PELLETS',
  'GWEATHER_PHENOMENON_HAIL',
  'GWEATHER_PHENOMENON_SMALL_HAIL',
  'GWEATHER_PHENOMENON_UNKNOWN_PRECIPITATION',
  'GWEATHER_PHENOMENON_MIST',
  'GWEATHER_PHENOMENON_FOG',
  'GWEATHER_PHENOMENON_SMOKE',
  'GWEATHER_PHENOMENON_VOLCANIC_ASH',
  'GWEATHER_PHENOMENON_SAND',
  'GWEATHER_PHENOMENON_HAZE',
  'GWEATHER_PHENOMENON_SPRAY',
  'GWEATHER_PHENOMENON_DUST',
  'GWEATHER_PHENOMENON_SQUALL',
  'GWEATHER_PHENOMENON_SANDSTORM',
  'GWEATHER_PHENOMENON_DUSTSTORM',
  'GWEATHER_PHENOMENON_FUNNEL_CLOUD',
  'GWEATHER_PHENOMENON_TORNADO',
  'GWEATHER_PHENOMENON_DUST_WHIRLS',
  'GWEATHER_PHENOMENON_LAST'
);

constant GWeatherConditionQualifier is export := gint32;
our enum GWeatherConditionQualifierEnum is export (
   GWEATHER_QUALIFIER_INVALID           => -1,
  'GWEATHER_QUALIFIER_NONE',
  'GWEATHER_QUALIFIER_VICINITY',
  'GWEATHER_QUALIFIER_LIGHT',
  'GWEATHER_QUALIFIER_MODERATE',
  'GWEATHER_QUALIFIER_HEAVY',
  'GWEATHER_QUALIFIER_SHALLOW',
  'GWEATHER_QUALIFIER_PATCHES',
  'GWEATHER_QUALIFIER_PARTIAL',
  'GWEATHER_QUALIFIER_THUNDERSTORM',
  'GWEATHER_QUALIFIER_BLOWING',
  'GWEATHER_QUALIFIER_SHOWERS',
  'GWEATHER_QUALIFIER_DRIFTING',
  'GWEATHER_QUALIFIER_FREEZING',
  'GWEATHER_QUALIFIER_LAST'
);

constant GWeatherDistanceUnit is export := guint32;
our enum GWeatherDistanceUnitEnum is export (
   GWEATHER_DISTANCE_UNIT_INVALID       => 0,
  'GWEATHER_DISTANCE_UNIT_DEFAULT',
  'GWEATHER_DISTANCE_UNIT_METERS',
  'GWEATHER_DISTANCE_UNIT_KM',
  'GWEATHER_DISTANCE_UNIT_MILES'
);

constant GWeatherFormatOptions is export := guint32;
our enum GWeatherFormatOptionsEnum is export (
  GWEATHER_FORMAT_OPTION_DEFAULT                 =>      0,
  GWEATHER_FORMAT_OPTION_SENTENCE_CAPITALIZATION => 1 +< 0,
  GWEATHER_FORMAT_OPTION_NO_CAPITALIZATION       => 1 +< 1,
);

constant GWeatherLocationLevel is export := guint32;
our enum GWeatherLocationLevelEnum is export <
  GWEATHER_LOCATION_WORLD
  GWEATHER_LOCATION_REGION
  GWEATHER_LOCATION_COUNTRY
  GWEATHER_LOCATION_ADM1
  GWEATHER_LOCATION_CITY
  GWEATHER_LOCATION_WEATHER_STATION
  GWEATHER_LOCATION_DETACHED
  GWEATHER_LOCATION_NAMED_TIMEZONE
>;

constant GWeatherPressureUnit is export := guint32;
our enum GWeatherPressureUnitEnum is export (
   GWEATHER_PRESSURE_UNIT_INVALID    => 0,
  'GWEATHER_PRESSURE_UNIT_DEFAULT',
  'GWEATHER_PRESSURE_UNIT_KPA',
  'GWEATHER_PRESSURE_UNIT_HPA',
  'GWEATHER_PRESSURE_UNIT_MB',
  'GWEATHER_PRESSURE_UNIT_MM_HG',
  'GWEATHER_PRESSURE_UNIT_INCH_HG',
  'GWEATHER_PRESSURE_UNIT_ATM'
);

constant GWeatherSky is export := gint32;
our enum GWeatherSkyEnum is export (
   GWEATHER_SKY_INVALID            => -1,
  'GWEATHER_SKY_CLEAR',
  'GWEATHER_SKY_BROKEN',
  'GWEATHER_SKY_SCATTERED',
  'GWEATHER_SKY_FEW',
  'GWEATHER_SKY_OVERCAST',
  'GWEATHER_SKY_LAST'
);

constant GWeatherSpeedUnit is export := guint32;
our enum GWeatherSpeedUnitEnum is export (
   GWEATHER_SPEED_UNIT_INVALID     => 0,
  'GWEATHER_SPEED_UNIT_DEFAULT',
  'GWEATHER_SPEED_UNIT_MS',
  'GWEATHER_SPEED_UNIT_KPH',
  'GWEATHER_SPEED_UNIT_MPH',
  'GWEATHER_SPEED_UNIT_KNOTS',
  'GWEATHER_SPEED_UNIT_BFT'
);

constant GWeatherTemperatureUnit is export := guint32;
our enum GWeatherTemperatureUnitEnum is export (
   GWEATHER_TEMP_UNIT_INVALID      => 0,
  'GWEATHER_TEMP_UNIT_DEFAULT',
  'GWEATHER_TEMP_UNIT_KELVIN',
  'GWEATHER_TEMP_UNIT_CENTIGRADE',
  'GWEATHER_TEMP_UNIT_FAHRENHEIT'
);

constant GWeatherWindDirection is export := gint32;
our enum GWeatherWindDirectionEnum is export (
  GWEATHER_WIND_INVALID  => -1,
  'GWEATHER_WIND_VARIABLE',
  'GWEATHER_WIND_N',
  'GWEATHER_WIND_NNE',
  'GWEATHER_WIND_NE',
  'GWEATHER_WIND_ENE',
  'GWEATHER_WIND_E',
  'GWEATHER_WIND_ESE',
  'GWEATHER_WIND_SE',
  'GWEATHER_WIND_SSE',
  'GWEATHER_WIND_S',
  'GWEATHER_WIND_SSW',
  'GWEATHER_WIND_SW',
  'GWEATHER_WIND_WSW',
  'GWEATHER_WIND_W',
  'GWEATHER_WIND_WNW',
  'GWEATHER_WIND_NW',
  'GWEATHER_WIND_NNW',
  'GWEATHER_WIND_LAST'
);

constant GWeatherProvider is export := guint32;
our enum GWeatherProviderEnum is export (
  GWEATHER_PROVIDER_NONE   => 0,
  GWEATHER_PROVIDER_METAR  => 1,
  GWEATHER_PROVIDER_IWIN   => 1 +< 2,
  GWEATHER_PROVIDER_YAHOO  => 1 +< 3,
  GWEATHER_PROVIDER_MET_NO => 1 +< 4,
  GWEATHER_PROVIDER_OWM    => 1 +< 5,
  GWEATHER_PROVIDER_ALL    => 2 ** 6 - 1
);
